version: '3.9'

services:
  book:
    build:
      context: book-service
      dockerfile: src/main/resources/book.dockerfile
    expose:
      - 8080
    depends_on:
      - config-server
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - CONFIG_SERVER_HOST=config-server
    ports:
      - "8080:8080"
  order:
    build:
      context: order-service
      dockerfile: src/main/resources/order.dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - kafka
    expose:
      - 8080
    ports:
      - "8081:8080"
  payment:
    build:
      context: payment-service
      dockerfile: src/main/resources/payment.dockerfile
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ORDER_SERVICE_URL=http://order:8080
    expose:
      - 8080
    ports:
      - "8082:8080"
  notification:
    build:
      context: notification-service
      dockerfile: src/main/resources/notification.dockerfile
  delivery:
    build:
      context: delivery-service
      dockerfile: src/main/resources/delivery.dockerfile
    depends_on:
      - kafka
    expose:
      - 8080
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8083:8080"
  kafka:
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_MODE: 'kraft'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 3
  console:
    image: docker.redpanda.com/vectorized/console
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: kafka:29092
    ports:
      - "8090:8080"
  config-server:
    build:
      context: config-server
      dockerfile: server.dockerfile
    expose:
      - 8888
    ports:
      - "8888:8888"
